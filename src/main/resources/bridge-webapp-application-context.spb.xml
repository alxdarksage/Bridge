<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="
		http://www.springframework.org/schema/beans     
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		
   	<context:component-scan base-package="org.sagebionetworks.bridge.webapp.controllers"/>

    <mvc:annotation-driven />

   	<import resource="bridge-log-sweeper.spb.xml" />

    <!-- TODO: This class requires construction on every request for every user, retrieving their session 
        token. Actually I kinda don't believe that, it might be safe for one user to reuse this client 
        between requests.
        
        Also, this is the publicSynapseClient, you can configure a privateSynapseClient that uses 
        the private auth URL.
    -->
    
    <bean id="synapseClient" class="org.sagebionetworks.client.SynapseClientImpl" scope="prototype">
        <property name="repositoryEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getRepositoryServiceEndpoint"/>
        </property>
        <property name="authEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getAuthenticationServicePublicEndpoint"/>
        </property>
        <property name="fileEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getFileServiceEndpoint"/>
        </property>
    </bean>
    
    <bean id="privateSynapseClient" class="org.sagebionetworks.client.SynapseClientImpl" scope="prototype">
        <property name="repositoryEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getRepositoryServiceEndpoint"/>
        </property>
        <property name="authEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getAuthenticationServicePrivateEndpoint"/>
        </property>
        <property name="fileEndpoint">
            <bean class="org.sagebionetworks.StackConfiguration"
                factory-method="getFileServiceEndpoint"/>
        </property>
    </bean>
    
    <!-- TODO: This needs to have its endpoint set to work on localhost:8080 through the 
        StackConfiguration stuff.
     -->
    <bean id="bridgeClient" class="org.sagebionetworks.client.BridgeClientImpl" scope="prototype">
        <constructor-arg ref="synapseClient"/>
    </bean>

    <bean id="bridgeUser" class="org.sagebionetworks.bridge.webapp.forms.BridgeUser" scope="prototype"/>
    
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	<!-- Not currently used, but needed for multipart file uploads. -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="maxUploadSize" value="100000"/>
    </bean>
    
    <!-- Localization -->
    <!-- 
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>
     -->
     
    <!-- Uses the accept header by default, and that's just fine. A good test would be to compare all the keys
        in the English file to all the other files, just to verify that you've filled them all out.
     -->
    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource">  
        <property name="basenames">  
            <list>  
                <value>classpath:messages/messages</value>
            </list>
        </property>  
        <property name="cacheSeconds" value="0"/>  
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
  
</beans>
