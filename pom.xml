<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>org.sagebionetworks.bridge</groupId>
	<artifactId>bridge</artifactId>
	<version>2013-12-20-6a609d0-894</version>
	<packaging>war</packaging>
	<name>Bridge Web Application</name>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<commons-beanutils.version>1.8.3</commons-beanutils.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<commons-fileupload.version>1.2</commons-fileupload.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-logging.version>1.1.1</commons-logging.version>
		<guava.version>15.0</guava.version>
		<gzip.filter>1.7</gzip.filter>
		<hibernate-validator.version>5.0.1.Final</hibernate-validator.version>
		<jackson.version>1.9.13</jackson.version>
		<jsoup.version>1.7.3</jsoup.version>
		<jsp.version>2.2</jsp.version>
		<jsp-impl.version>2.2.1</jsp-impl.version>
		<jstl.version>1.2</jstl.version>
		<junit.version>4.11</junit.version>
		<log4j.version>2.0-beta8</log4j.version>
		<mockito.version>1.9.5</mockito.version>
		<phantomdriver.version>1.0.4</phantomdriver.version>
		<quartz.version>1.6.3</quartz.version>
		<selenium.version>2.34.0</selenium.version>
		<!-- <selenium.version>2.39.0</selenium.version> -->
		<servlet.version>3.0</servlet.version>
		<spring.version>3.0.5.RELEASE</spring.version>
		<synapse.version>2013-12-20-d2a62e9-899</synapse.version>
		<tomcat.version>7.0.32</tomcat.version>
		<wro4j.version>1.6.3</wro4j.version>
		
		<tomcat7-maven-plugin.version>2.0</tomcat7-maven-plugin.version>
		<maven-failsafe-plugin.version>2.6</maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.6.4.201312101107</jacoco-maven-plugin.version>
		<cargo-maven2-plugin.version>1.3.1</cargo-maven2-plugin.version>
		<maven-war-plugin.version>2.4</maven-war-plugin.version>
		<maven-failsafe-plugin.version>2.6</maven-failsafe-plugin.version>
	</properties>
	
	<repositories>
		<repository>
			<id>sagebionetworks-releases-local</id>
			<name>sagebionetworks-releases-local</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local</url>
		</repository>
		<repository>
			<id>sagebionetworks-ext</id>
			<name>sagebionetworks-releases-ext</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/ext-releases-local</url>
		</repository>
		<repository>
            <id>apache-repo-releases</id>
			<name>apache-releases</name>
			<url>https://repository.apache.org/content/repositories/releases/</url>
        </repository>		
		<repository>
			<id>sun-maven-repository</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>atlassian-public</id>
				<url>https://maven.atlassian.com/repository/public</url>
				<snapshots>
					<enabled>true</enabled>
					<updatePolicy>never</updatePolicy>
					<checksumPolicy>warn</checksumPolicy>
				</snapshots>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-releases</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local</url>
		</repository>
		<snapshotRepository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-snapshots</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-snapshots-local</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
	</distributionManagement>
			
	<dependencies>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
			<version>${synapse.version}</version>
			<exclusions>
				<exclusion>
					<!-- This appears to pull in the servlet API. -->
					<groupId>org.springframework</groupId>					
					<artifactId>org.springframework.web.portlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-servlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
		</dependency>		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-auto-generated</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
			<version>${synapse.version}</version>
		</dependency>
				
		<!-- Client-side resource pre-processors/JSP -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
			<scope>runtime</scope>
		</dependency>		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<dependency> <!-- gzip filter. -->
			<groupId>net.sourceforge.pjl-comp-filter</groupId>
			<artifactId>pjl-comp-filter</artifactId>
			<version>${gzip.filter}</version>
		</dependency>
		<dependency>
			<groupId>ro.isdc.wro4j</groupId>
			<artifactId>wro4j-core</artifactId>
			<version>${wro4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ro.isdc.wro4j</groupId>
			<artifactId>wro4j-extensions</artifactId>
			<version>${wro4j.version}</version>
		</dependency>
		<!-- Required by less processor in wro4j  -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>	
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons-beanutils.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>		
		
		<!-- This concrete servlet implementation is required now to build and test (this doesn't seem correct), 
			the only other place the servlet API is provided is in Spring's portlet project, which we're 
			explicitly excluding. -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>		
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jsp-impl</artifactId>
			<version>${jsp-impl.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- SPRING -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
	
		<!-- LOGGING (log4j with JDK Logging statements, using the adapter) -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		
		<!-- SYNAPSE -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-logging</artifactId>
			<version>${synapse.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>					
					<artifactId>org.springframework.web.portlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-servlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>bridgeJavaClient</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
			<version>${synapse.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>					
					<artifactId>org.springframework.web.portlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-servlet</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
			<version>${quartz.version}</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
		<dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
		
		<!-- TEST -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>  		
		<dependency>
			<groupId>com.github.detro.ghostdriver</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>${phantomdriver.version}</version>
			<!-- Brings in wrong version of servlet API. -->
			<exclusions>
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>				  
					<artifactId>servlet-api-2.5</artifactId>
				</exclusion>
			</exclusions>			
		</dependency>
		<!-- Tomcat7 needs this when running integration tests. -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>		
		
	</dependencies>

	<build>
		<finalName>bridge</finalName>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>	
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat7-maven-plugin.version}</version>
				<configuration>
					<port>8888</port>
				</configuration>
			</plugin>
			<!--  By default, integration tests will fail unless you run them as part of the integration 
				profile. Use 'mvn clean install -P integration' to run all the unit/integration tests. 
				Unit tests are still run as part of the normal build.
			-->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<skipITs>true</skipITs>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution> 
						<id>fail-build</id> 
						<phase>verify</phase> 
						<goals> 
							<goal>verify</goal> 
						</goals> 
					</execution> 					
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>${tomcat7-maven-plugin.version}</version>
						<configuration>
							<port>8888</port>
							<systemProperties>
								<bridge-app-context>classpath:test-bridge-webapp-application-context.spb.xml</bridge-app-context>
							</systemProperties>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<configuration>
							<skipITs>false</skipITs>
							<!-- 
							<includes>
							    <include>**/ITCommunityWiki.java</include>
							</includes>
							 -->
						</configuration>
					</plugin>
			        <plugin>
			            <groupId>org.jacoco</groupId>
			            <artifactId>jacoco-maven-plugin</artifactId>
			            <version>${jacoco-maven-plugin.version}</version>
			            <executions>
			                <execution>
			                    <id>prep-agent</id>
			                    <phase>pre-integration-test</phase>
			                    <goals>
			                        <goal>prepare-agent-integration</goal>
			                    </goals>
			                    <configuration>
			                        <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
			                        <propertyName>surefireArgLine</propertyName>
                                    <excludes>
                                        <exclude>**/SageServicesStub*</exclude>
                                    </excludes>
		                    </configuration>
			                </execution>
			                <execution>
			                    <id>report</id>
			                    <phase>verify</phase>
			                    <goals>
			                        <goal>report-integration</goal>
			                    </goals>
			                    <configuration>
			                        <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
			                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
		                            <excludes>
		                                <exclude>**/SageServicesStub*</exclude>
		                            </excludes>
			                    </configuration>
			                </execution>
			            </executions>
			        </plugin>			 
		            <plugin>
		                <groupId>org.codehaus.cargo</groupId>
		                <artifactId>cargo-maven2-plugin</artifactId>
		                <version>${cargo-maven2-plugin.version}</version>
		                <configuration>
		                    <container>
		                        <containerId>tomcat7x</containerId>
		                        <zipUrlInstaller>
		                            <url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.6/bin/apache-tomcat-7.0.6.zip</url>
		                        </zipUrlInstaller>
		                        <systemProperties>
		                            <org.sagebionetworks.stackEncryptionKey>${org.sagebionetworks.stackEncryptionKey}</org.sagebionetworks.stackEncryptionKey>
		                            <org.sagebionetworks.stack.configuration.url>${org.sagebionetworks.stack.configuration.url}</org.sagebionetworks.stack.configuration.url>
		                            <org.sagebionetworks.stack>${org.sagebionetworks.stack}</org.sagebionetworks.stack>
		                            <org.sagebionetworks.stack.instance>${org.sagebionetworks.stack.instance}</org.sagebionetworks.stack.instance>
		                            <org.sagebionetworks.stack.iam.id>${org.sagebionetworks.stack.iam.id}</org.sagebionetworks.stack.iam.id>
		                            <org.sagebionetworks.stack.iam.key>${org.sagebionetworks.stack.iam.key}</org.sagebionetworks.stack.iam.key>
		                            <org.sagebionetworks.rest.api.endpoint>${tomcat.endpoint}/${org.sagebionetworks.repository.context}</org.sagebionetworks.rest.api.endpoint>
		                            <bridge-app-context>classpath:test-bridge-webapp-application-context.spb.xml</bridge-app-context>
		                        </systemProperties>                        
		                    </container>
		                    <configuration>
		                        <properties>
		                            <cargo.servlet.port>8888</cargo.servlet.port>
		                            <cargo.tomcat.ajp.port>8889</cargo.tomcat.ajp.port>
		                            <cargo.jvmargs>${surefireArgLine}</cargo.jvmargs>
		                        </properties>
		                    </configuration>
		                </configuration>
		                <executions>
		                    <!-- start server before integration tests -->
		                    <execution>
		                        <id>start-container</id>
		                        <phase>pre-integration-test</phase>
		                        <goals>
		                            <goal>start</goal>
		                        </goals>
		                    </execution>
		                    <!-- stop server after integration tests -->
		                    <execution>
		                        <id>stop-container</id>
		                        <phase>post-integration-test</phase>
		                        <goals>
		                            <goal>stop</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>					 
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>
